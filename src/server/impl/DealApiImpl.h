/**
* Deal
* # Introduction A web service that accepts request by APIs and returns 1+ bridge deals  # OpenAPI Specification This API is documented in **OpenAPI format**  # Cross-Origin Resource Sharing This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/). And that allows cross-domain communication from the browser. All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.  # Authentication  Forms of authentication:   - API Key 
*
* The version of the OpenAPI document: 0.0.1
* Contact: support@example.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* DealApiImpl.h
*
* 
*/

#ifndef DEAL_API_IMPL_H_
#define DEAL_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>

#include <DealApi.h>

#include <pistache/optional.h>

#include "BoardList.h"
#include "Error.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class DealApiImpl : public org::openapitools::server::api::DealApi {
public:
    DealApiImpl(std::shared_ptr<Pistache::Rest::Router>);
    ~DealApiImpl() {}

    void get_deal(const Pistache::Optional<std::string> &seed, const Pistache::Optional<int32_t> &session, const Pistache::Optional<int32_t> &event, const Pistache::Optional<int32_t> &firstBoard, const Pistache::Optional<int32_t> &numberOfBoards, Pistache::Http::ResponseWriter &response);

};

}
}
}
}



#endif